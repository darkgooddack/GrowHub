# Generated by Django 5.2.4 on 2025-07-13 19:45

import django.core.validators
import users.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('telegram', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('avatar', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('github', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('linkedin', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('resume', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('info', models.TextField(blank=True, null=True)),
                ('role_id', models.CharField(choices=[('not_selected', 'Не выбрано'), ('backend', 'Backend Developer'), ('frontend', 'Frontend Developer'), ('devops', 'DevOps Engineer'), ('designer', 'UI/UX Designer'), ('qa', 'QA'), ('pm', 'PM')], default='not_selected', max_length=20)),
                ('grade_id', models.CharField(choices=[('intern', 'Стажёр'), ('junior', 'Junior'), ('middle', 'Middle'), ('senior', 'Senior'), ('lead', 'Tech Lead'), ('architect', 'Архитектор')], default='intern', max_length=20)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
